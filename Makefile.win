LIBCDIO_VERSION = 2.1.0
LIBCDIO_NAME = libcdio-$(LIBCDIO_VERSION)
HOST = i686-w64-mingw32
CC = ${HOST}-gcc
CXX = ${HOST}-g++
LD = ${HOST}-ld
WINDRES = ${HOST}-windres

target  ?= efsextract
objects := $(patsubst %.c,%.o,$(wildcard *.c)) resource.o

#EXTRAS += -fsanitize=bounds -fsanitize=undefined -fsanitize=null -fcf-protection=full -fstack-protector-all -fstack-check -Wimplicit-fallthrough -fanalyzer -Wall

LDLIBS += -lws2_32 -lwinmm
LDFLAGS += -static ${EXTRAS}
CFLAGS  += -flto -std=gnu2x -Og -ggdb -Ilibcdio-install/include ${EXTRAS}

.PHONY: all
all:	$(target) README
	strip $(target).exe
	upx $(target).exe

.PHONY: clean
clean:
	rm -f $(target) $(target).exe $(objects)

.PHONY: distclean
distclean: clean
	rm -Rf libcdio-build libcdio-install $(LIBCDIO_NAME)

README: ${target}.1
	MANWIDTH=77 man --nh --nj ./${target}.1 | col -b > $@

resource.o: resource.rc
	$(WINDRES) $< -o $@

$(target): $(objects) libcdio-install/lib/libiso9660.a libcdio-install/lib/libudf.a libcdio-install/lib/libcdio.a

########################
########################
# libcdio stuff
########################
########################


$(objects): libcdio-install/lib/libcdio.a libcdio-install/lib/libiso9660.a libcdio-install/lib/libudf.a


libcdio-install/lib/libcdio.a libcdio-install/lib/libiso9660.a: libcdio-build/Makefile
	$(MAKE) -C libcdio-build install MAKEFLAGS=

libcdio-build/Makefile: $(LIBCDIO_NAME)/configure
	mkdir -p libcdio-build
	cd libcdio-build && ../$(LIBCDIO_NAME)/configure --disable-shared --enable-static --without-cd-drive --without-cd-info --without-cdda-player --without-cd-read --without-iso-info --without-iso-read --disable-cxx --disable-joliet --disable-rock --disable-cddb --disable-vcd-info --disable-example-progs --disable-cpp-progs --prefix="`realpath ../libcdio-install`" --host=${HOST}

$(LIBCDIO_NAME)/configure: libraries/$(LIBCDIO_NAME).tar.gz
	tar -zxvf $<
	touch $@

